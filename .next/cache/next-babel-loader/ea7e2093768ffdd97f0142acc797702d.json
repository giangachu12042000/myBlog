{"ast":null,"code":"var __jsx = React.createElement;\nimport './style.scss';\nimport React from 'react';\nimport { withRouter } from 'next/router'; // import axios from 'axios';\n\nimport AddUser from './add';\nimport UserV from './userV';\nimport ModalV from '../components/modal';\nimport Auth from '../../localStorege';\nimport axios from '../../utils';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form: {},\n      modal: false,\n      users: [],\n      user: null,\n      modleShow: false,\n      handleGetId: null,\n      showSucess: false,\n      sucess: null,\n      search: null,\n      params: {\n        page: 1,\n        size: 20\n      }\n    };\n    this.handleModal = this.handleModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchUser = this.fetchUser.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.deleteConfirm = this.deleteConfirm.bind(this);\n    this.handleGetIdUser = this.handleGetIdUser.bind(this);\n    this.opentSucces = this.opentSucces.bind(this);\n    this.handleSucces = this.handleSucces.bind(this);\n    this.getsearch = this.getsearch.bind(this);\n  }\n\n  handleChange(even) {\n    let {\n      form\n    } = this.state;\n    const name = even.target.name;\n    const value = even.target.value;\n    form[name] = value;\n    this.setState({\n      form\n    });\n  }\n\n  getsearch(even) {\n    let {\n      search\n    } = this.state;\n    const value = even.target.value;\n    search = value;\n    this.setState({\n      search\n    });\n    console.log(this.state.search, '===============?search');\n    this.fetchUser();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let {\n      form,\n      user\n    } = this.state;\n\n    try {\n      if (user._id) {\n        const id = user._id;\n        axios.put(`/user/edit/${id}`, {\n          form\n        }).then(res => {\n          let param = res.data.message;\n\n          if (res.data) {\n            this.fetchUser();\n            this.opentSucces(param);\n            this.handleSucces(true);\n          }\n        });\n      } else {\n        axios.post('/user/add', {\n          form\n        }).then(res => {\n          let param = res.data.message;\n\n          if (res.data) {\n            this.fetchUser();\n            this.opentSucces(param);\n            this.handleSucces(true);\n          }\n        });\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  handleModal(param) {\n    let {\n      modal\n    } = this.state;\n    modal = param;\n    this.setState({\n      modal\n    });\n  } //==================================>Email existed\n\n\n  opentSucces(param) {\n    let {\n      sucess\n    } = this.state;\n    sucess = param;\n    this.setState({\n      sucess\n    });\n  }\n\n  handleSucces(param) {\n    let {\n      showSucess\n    } = this.state;\n    showSucess = param;\n    this.setState({\n      showSucess\n    });\n    let close = false;\n    setTimeout(() => {\n      showSucess = close;\n      this.setState({\n        showSucess\n      });\n    }, 2500);\n  } //==================================>//\n\n\n  fetchUser() {\n    let {\n      users,\n      params,\n      search\n    } = this.state; // const {router} = this.props;\n    // const params = router.query;\n    // params = \n\n    const token = Auth.getToken();\n    console.log(token, '==========================>?tke');\n\n    try {\n      axios.get('/user', {\n        params: {\n          search\n        }\n      }).then(res => {\n        if (res.data) {\n          users = res.data.data;\n          this.setState({\n            users\n          });\n          return users;\n        }\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  handleEdit(param) {\n    let {\n      user\n    } = this.state;\n    user = param;\n    this.setState({\n      user\n    });\n  }\n\n  deleteConfirm(param) {\n    let {\n      modleShow\n    } = this.state;\n    modleShow = param;\n    this.setState({\n      modleShow\n    });\n  }\n\n  handleGetIdUser(param) {\n    let {\n      handleGetId\n    } = this.state;\n    handleGetId = param;\n    this.setState({\n      handleGetId\n    });\n  }\n\n  handleRemove(param) {\n    const id = param._id;\n    this.deleteConfirm(true);\n\n    try {\n      axios.delete(`/user/delete/${id}`).then(res => {\n        if (res.data) {\n          this.fetchUser();\n        }\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  render() {\n    const {\n      users,\n      modal,\n      user,\n      modleShow,\n      handleGetId,\n      sucess,\n      showSucess\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-md-12 text-right\"\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        this.handleModal(true);\n        this.handleEdit(false);\n      },\n      className: \"btn btn-primary col-md-1\"\n    }, \"them\")), __jsx(\"div\", {\n      className: \"col-md-12 box-form\"\n    }, __jsx(\"form\", {\n      method: \"post\",\n      encType: \"multipart/form-data\",\n      onSubmit: this.handleSubmit\n    }, __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(\"div\", {\n      className: \"col-7\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"nh\\u1EADp t\\u1EEB c\\u1EA7n t\\xECm ki\\u1EBFm\",\n      onChange: this.getsearch\n    }))))), __jsx(UserV, {\n      modal: modal,\n      users: users,\n      handleModal: this.handleModal,\n      deleteConfirm: this.deleteConfirm,\n      handleEdit: this.handleEdit,\n      handleGetIdUser: this.handleGetIdUser\n    }), __jsx(ModalV, {\n      modleShow: modleShow,\n      handleGetId: handleGetId,\n      sucess: sucess,\n      showSucess: showSucess,\n      deleteConfirm: this.deleteConfirm,\n      handleRemove: this.handleRemove,\n      handleSucces: this.handleSucces\n    }), __jsx(\"div\", {\n      className: \"col-md-12\"\n    }, modal && __jsx(AddUser, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      handleModal: this.handleModal,\n      fetchUser: this.fetchUser,\n      user: user\n    })));\n  }\n\n}\n\nexport default withRouter(User);","map":null,"metadata":{},"sourceType":"module"}