{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\blog_client\\\\app\\\\components\\\\editor\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport './styles.scss';\n\nvar EditorConvertToHTML = /*#__PURE__*/function (_Component) {\n  _inherits(EditorConvertToHTML, _Component);\n\n  var _super = _createSuper(EditorConvertToHTML);\n\n  function EditorConvertToHTML(props) {\n    var _this;\n\n    _classCallCheck(this, EditorConvertToHTML);\n\n    _this = _super.call(this, props);\n    var html = '<p></p>';\n    var contentBlock = htmlToDraft(html);\n\n    if (contentBlock) {\n      var contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      var editorState = EditorState.createWithContent(contentState);\n      _this.state = {\n        editorState: editorState\n      };\n    }\n\n    return _this;\n  } // onEditorStateChange = (editorState) => {\n  //   let {editorStateView} = this.props;\n  //     editorStateView = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n  //   this.setState({editorState});\n  // };\n\n\n  _createClass(EditorConvertToHTML, [{\n    key: \"render\",\n    value: function render() {\n      var editorState = this.state.editorState;\n      var _this$props = this.props,\n          handleChangeEditor = _this$props.handleChangeEditor,\n          editorStateView = _this$props.editorStateView;\n      var result = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n      console.log(handleChangeEditor(editorState), '============>:');\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, __jsx(Editor, {\n        editorState: editorStateView,\n        wrapperClassName: \"demo-wrapper\",\n        editorClassName: \"demo-editor\",\n        onEditorStateChange: handleChangeEditor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }), __jsx(\"textarea\", {\n        className: \"text-html\",\n        disabled: true,\n        value: result,\n        name: \"editor\" // onChange={}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return EditorConvertToHTML;\n}(Component);\n\nexport { EditorConvertToHTML as default };","map":{"version":3,"sources":["C:/Users/Admin/Desktop/blog_client/app/components/editor/index.js"],"names":["React","Component","EditorState","convertToRaw","ContentState","Editor","draftToHtml","htmlToDraft","EditorConvertToHTML","props","html","contentBlock","contentState","createFromBlockArray","contentBlocks","editorState","createWithContent","state","handleChangeEditor","editorStateView","result","getCurrentContent","console","log"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,YAApC,QAAwD,UAAxD;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAO,kDAAP;AACA,OAAO,eAAP;;IAEqBC,mB;;;;;AACnB,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,QAAMC,IAAI,GAAG,SAAb;AACA,QAAMC,YAAY,GAAGJ,WAAW,CAACG,IAAD,CAAhC;;AACA,QAAIC,YAAJ,EAAkB;AAChB,UAAMC,YAAY,GAAGR,YAAY,CAACS,oBAAb,CAAkCF,YAAY,CAACG,aAA/C,CAArB;AACA,UAAMC,WAAW,GAAGb,WAAW,CAACc,iBAAZ,CAA8BJ,YAA9B,CAApB;AACA,YAAKK,KAAL,GAAa;AACXF,QAAAA,WAAW,EAAXA;AADW,OAAb;AAGD;;AAVgB;AAWlB,G,CAED;AACA;AACA;AACA;AACA;;;;;6BAES;AAAA,UACCA,WADD,GACiB,KAAKE,KADtB,CACCF,WADD;AAAA,wBAEyC,KAAKN,KAF9C;AAAA,UAECS,kBAFD,eAECA,kBAFD;AAAA,UAEqBC,eAFrB,eAEqBA,eAFrB;AAGP,UAAIC,MAAM,GAAGd,WAAW,CAACH,YAAY,CAACY,WAAW,CAACM,iBAAZ,EAAD,CAAb,CAAxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,kBAAkB,CAACH,WAAD,CAA9B,EAA4C,gBAA5C;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AACE,QAAA,WAAW,EAAII,eADjB;AAEE,QAAA,gBAAgB,EAAC,cAFnB;AAGE,QAAA,eAAe,EAAC,aAHlB;AAIE,QAAA,mBAAmB,EAAED,kBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,KAAK,EAAEE,MAHT;AAIE,QAAA,IAAI,EAAC,QAJP,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAiBD;;;;EA1C8CnB,S;;SAA5BO,mB","sourcesContent":["import React, { Component } from 'react';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport './styles.scss';\r\n\r\nexport default class EditorConvertToHTML extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const html = '<p></p>';\r\n    const contentBlock = htmlToDraft(html);\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.state = {\r\n        editorState,\r\n      }; \r\n    }\r\n  }\r\n  \r\n  // onEditorStateChange = (editorState) => {\r\n  //   let {editorStateView} = this.props;\r\n  //     editorStateView = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n  //   this.setState({editorState});\r\n  // };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    const { handleChangeEditor, editorStateView } = this.props ;\r\n    let result = draftToHtml(convertToRaw(editorState.getCurrentContent())) ;\r\n    console.log(handleChangeEditor(editorState),'============>:')\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState = {editorStateView}\r\n          wrapperClassName=\"demo-wrapper\"\r\n          editorClassName=\"demo-editor\"\r\n          onEditorStateChange={handleChangeEditor}\r\n        />\r\n        <textarea\r\n          className=\"text-html\"\r\n          disabled\r\n          value={result}\r\n          name=\"editor\"\r\n          // onChange={}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}