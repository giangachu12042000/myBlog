{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport './style.scss';\nimport React from 'react';\nimport { withRouter } from 'next/router'; // import axios from 'axios';\n\nimport AddUser from './add';\nimport UserV from './userV';\nimport ModalV from '../components/modal';\nimport Auth from '../../localStorege';\nimport axios from '../../utils';\n\nvar User = /*#__PURE__*/function (_React$Component) {\n  _inherits(User, _React$Component);\n\n  var _super = _createSuper(User);\n\n  function User(props) {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      form: {},\n      modal: false,\n      users: [],\n      user: null,\n      modleShow: false,\n      handleGetId: null,\n      showSucess: false,\n      sucess: null,\n      search: null,\n      params: {\n        page: 1,\n        size: 20\n      }\n    };\n    _this.handleModal = _this.handleModal.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.fetchUser = _this.fetchUser.bind(_assertThisInitialized(_this));\n    _this.handleEdit = _this.handleEdit.bind(_assertThisInitialized(_this));\n    _this.handleRemove = _this.handleRemove.bind(_assertThisInitialized(_this));\n    _this.deleteConfirm = _this.deleteConfirm.bind(_assertThisInitialized(_this));\n    _this.handleGetIdUser = _this.handleGetIdUser.bind(_assertThisInitialized(_this));\n    _this.opentSucces = _this.opentSucces.bind(_assertThisInitialized(_this));\n    _this.handleSucces = _this.handleSucces.bind(_assertThisInitialized(_this));\n    _this.getsearch = _this.getsearch.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"handleChange\",\n    value: function handleChange(even) {\n      var form = this.state.form;\n      var name = even.target.name;\n      var value = even.target.value;\n      form[name] = value;\n      this.setState({\n        form: form\n      });\n    }\n  }, {\n    key: \"getsearch\",\n    value: function getsearch(even) {\n      var search = this.state.search;\n      var value = even.target.value;\n      search = value;\n      this.setState({\n        search: search\n      });\n      console.log(this.state.search, '===============?search');\n      this.fetchUser();\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var _this$state = this.state,\n          form = _this$state.form,\n          user = _this$state.user;\n\n      try {\n        if (user._id) {\n          var id = user._id;\n          axios.put(\"/user/edit/\".concat(id), {\n            form: form\n          }).then(function (res) {\n            var param = res.data.message;\n\n            if (res.data) {\n              _this2.fetchUser();\n\n              _this2.opentSucces(param);\n\n              _this2.handleSucces(true);\n            }\n          });\n        } else {\n          axios.post('/user/add', {\n            form: form\n          }).then(function (res) {\n            var param = res.data.message;\n\n            if (res.data) {\n              _this2.fetchUser();\n\n              _this2.opentSucces(param);\n\n              _this2.handleSucces(true);\n            }\n          });\n        }\n      } catch (err) {\n        throw err;\n      }\n    }\n  }, {\n    key: \"handleModal\",\n    value: function handleModal(param) {\n      var modal = this.state.modal;\n      modal = param;\n      this.setState({\n        modal: modal\n      });\n    } //==================================>Email existed\n\n  }, {\n    key: \"opentSucces\",\n    value: function opentSucces(param) {\n      var sucess = this.state.sucess;\n      sucess = param;\n      this.setState({\n        sucess: sucess\n      });\n    }\n  }, {\n    key: \"handleSucces\",\n    value: function handleSucces(param) {\n      var _this3 = this;\n\n      var showSucess = this.state.showSucess;\n      showSucess = param;\n      this.setState({\n        showSucess: showSucess\n      });\n      var close = false;\n      setTimeout(function () {\n        showSucess = close;\n\n        _this3.setState({\n          showSucess: showSucess\n        });\n      }, 2500);\n    } //==================================>//\n\n  }, {\n    key: \"fetchUser\",\n    value: function fetchUser() {\n      var _this4 = this;\n\n      var _this$state2 = this.state,\n          users = _this$state2.users,\n          params = _this$state2.params,\n          search = _this$state2.search; // const {router} = this.props;\n      // const params = router.query;\n      // params = \n\n      var token = Auth.getToken();\n      console.log(token, '==========================>?tke');\n\n      try {\n        axios.get('/user', {\n          params: {\n            search: search\n          }\n        }).then(function (res) {\n          if (res.data) {\n            users = res.data.data;\n\n            _this4.setState({\n              users: users\n            });\n\n            return users;\n          }\n        });\n      } catch (err) {\n        throw err;\n      }\n    }\n  }, {\n    key: \"handleEdit\",\n    value: function handleEdit(param) {\n      var user = this.state.user;\n      user = param;\n      this.setState({\n        user: user\n      });\n    }\n  }, {\n    key: \"deleteConfirm\",\n    value: function deleteConfirm(param) {\n      var modleShow = this.state.modleShow;\n      modleShow = param;\n      this.setState({\n        modleShow: modleShow\n      });\n    }\n  }, {\n    key: \"handleGetIdUser\",\n    value: function handleGetIdUser(param) {\n      var handleGetId = this.state.handleGetId;\n      handleGetId = param;\n      this.setState({\n        handleGetId: handleGetId\n      });\n    }\n  }, {\n    key: \"handleRemove\",\n    value: function handleRemove(param) {\n      var _this5 = this;\n\n      var id = param._id;\n      this.deleteConfirm(true);\n\n      try {\n        axios[\"delete\"](\"/user/delete/\".concat(id)).then(function (res) {\n          if (res.data) {\n            _this5.fetchUser();\n          }\n        });\n      } catch (err) {\n        throw err;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var _this$state3 = this.state,\n          users = _this$state3.users,\n          modal = _this$state3.modal,\n          user = _this$state3.user,\n          modleShow = _this$state3.modleShow,\n          handleGetId = _this$state3.handleGetId,\n          sucess = _this$state3.sucess,\n          showSucess = _this$state3.showSucess;\n      return __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-12 text-right\"\n      }, __jsx(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          _this6.handleModal(true);\n\n          _this6.handleEdit(false);\n        },\n        className: \"btn btn-primary col-md-1\"\n      }, \"them\")), __jsx(\"div\", {\n        className: \"col-md-12 box-form\"\n      }, __jsx(\"form\", {\n        method: \"post\",\n        encType: \"multipart/form-data\",\n        onSubmit: this.handleSubmit\n      }, __jsx(\"div\", {\n        className: \"form-row\"\n      }, __jsx(\"div\", {\n        className: \"col-7\"\n      }, __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"nh\\u1EADp t\\u1EEB c\\u1EA7n t\\xECm ki\\u1EBFm\",\n        onChange: this.getsearch\n      }))))), __jsx(UserV, {\n        modal: modal,\n        users: users,\n        handleModal: this.handleModal,\n        deleteConfirm: this.deleteConfirm,\n        handleEdit: this.handleEdit,\n        handleGetIdUser: this.handleGetIdUser\n      }), __jsx(ModalV, {\n        modleShow: modleShow,\n        handleGetId: handleGetId,\n        sucess: sucess,\n        showSucess: showSucess,\n        deleteConfirm: this.deleteConfirm,\n        handleRemove: this.handleRemove,\n        handleSucces: this.handleSucces\n      }), __jsx(\"div\", {\n        className: \"col-md-12\"\n      }, modal && __jsx(AddUser, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        handleModal: this.handleModal,\n        fetchUser: this.fetchUser,\n        user: user\n      })));\n    }\n  }]);\n\n  return User;\n}(React.Component);\n\nexport default withRouter(User);","map":null,"metadata":{},"sourceType":"module"}