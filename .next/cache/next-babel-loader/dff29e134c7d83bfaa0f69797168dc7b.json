{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport axios from '../../utils';\nimport Auth from '../../localStorege';\nimport ModalV from '../components/modal';\n\nvar LoginPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(LoginPage, _React$Component);\n\n  var _super = _createSuper(LoginPage);\n\n  function LoginPage(props) {\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      form: {},\n      sucess: null,\n      showSucess: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.opentSuccess = _this.opentSuccess.bind(_assertThisInitialized(_this));\n    _this.handleSucces = _this.handleSucces.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var form = this.state.form;\n      var value = event.target.value;\n      var name = event.target.name;\n      form[name] = value;\n      this.setState({\n        form: form\n      });\n    }\n  }, {\n    key: \"handleSucces\",\n    value: function handleSucces(param) {\n      var _this2 = this;\n\n      var showSucess = this.state.showSucess;\n      showSucess = param;\n      this.setState({\n        showSucess: showSucess\n      });\n      var close = false;\n      setTimeout(function () {\n        showSucess = close;\n\n        _this2.setState({\n          showSucess: showSucess\n        });\n\n        console.log(_this2.state.showSucess, '=============??');\n      }, 4000);\n    }\n  }, {\n    key: \"opentSuccess\",\n    value: function opentSuccess(param) {\n      var sucess = this.state.sucess;\n      sucess = param;\n      this.setState({\n        sucess: sucess\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      var form = this.state.form;\n\n      try {\n        axios.post(\"/login\", {\n          form: form\n        }).then(function (res) {\n          // let param = res.data.message;\n          if (res.data) {\n            var token = res.data;\n            console.log(token, '============');\n\n            if (token.code == 1) {\n              Auth.authenticateUser(token.data);\n            } else {\n              _this3.opentSuccess(token.message);\n\n              _this3.handleSucces(true);\n            }\n          }\n        });\n      } catch (err) {\n        throw err;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const token = Auth.getToken();\n      // if(token){\n      // }\n      var _this$state = this.state,\n          sucess = _this$state.sucess,\n          showSucess = _this$state.showSucess;\n      return __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-md-6\"\n      }, __jsx(ModalV, {\n        showSucess: showSucess,\n        handleSucces: this.handleSucces,\n        sucess: sucess\n      }), __jsx(\"form\", {\n        method: \"post\",\n        encType: \"multipart/form-data\",\n        onSubmit: this.handleSubmit\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"Email \"), __jsx(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        className: \"form-control\",\n        onChange: this.handleChange\n      })), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"Password \"), __jsx(\"input\", {\n        name: \"password\",\n        type: \"text\",\n        onChange: this.handleChange,\n        className: \"form-control\"\n      })), __jsx(\"div\", {\n        className: \"btn-group\"\n      }, __jsx(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\"\n      }, \"\\u0110\\u0103ng nh\\u1EADp\")))));\n    }\n  }]);\n\n  return LoginPage;\n}(React.Component);\n\nexport default withRouter(LoginPage);","map":null,"metadata":{},"sourceType":"module"}